[["index.html", "AlberdiLab | Manuscript in prep Lepus europaeus metagenomics Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Manuscript in prep Lepus europaeus metagenomics Ostaizka Aizpurua1 Antton Alberdi2 2024-08-29 Chapter 1 Introduction 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/mediterranean_podarcis.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(rairtable) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) #library(lmerTest) library(Hmsc) library(corrplot) library(lme4) library(nlme) library(ANCOMBC) University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Prepare a phyloseq object 2.5 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/DMB0165_metadata.tsv&quot;) %&gt;% rename(sample=1) 2.1.2 Read counts read_counts &lt;- read_tsv(&quot;data/DMB0165_counts.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample))) 2.1.3 Genome taxonomy genome_metadata &lt;- read_tsv(&quot;data/DMB0165_mag_info.tsv.gz&quot;) %&gt;% rename(length=mag_size)%&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) 2.1.4 Genome base hits genome_coverage &lt;- read_tsv(&quot;data/DMB0165_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% semi_join(., genome_metadata, by = &quot;genome&quot;)%&gt;% arrange(match(genome, read_counts$genome)) 2.1.5 Genome tree genome_tree &lt;- read_tree(&quot;data/DMB0165.tree.gz&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.1.6 Genome annotations Downloading individual annotation files from ERDA using information in Airtable and writing them to a single compressed table takes a while. The following chunk only needs to be run once, to generate the genome_annotations table that is saved in the data directory. Note that the airtable connection requires a personal access token. airtable(&quot;MAGs&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% #get base ID from Airtable browser URL read_airtable(., fields = c(&quot;ID&quot;,&quot;mag_name&quot;,&quot;number_genes&quot;,&quot;anno_url&quot;), id_to_col = TRUE) %&gt;% #get 3 columns from MAGs table filter(mag_name %in% paste0(genome_metadata$genome,&quot;.fa&quot;)) %&gt;% #filter by MAG name filter(number_genes &gt; 0) %&gt;% #genes need to exist select(anno_url) %&gt;% #list MAG annotation urls pull() %&gt;% read_tsv() %&gt;% #load all tables rename(gene=1, genome=2, contig=3) %&gt;% #rename first 3 columns write_tsv(file=&quot;data/genome_annotations.tsv.xz&quot;) #write to overall compressed file genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.3 Distill annotations into GIFTs genome_gifts_raw &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) diet_colors&lt;- c(&quot;#00AEDB&quot;,&quot;#00AFA1&quot;, &quot;#00B159&quot;) 2.4 Prepare a phyloseq object phylo_samples &lt;- sample_metadata %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() #convert to phyloseq sample_data object phylo_genome &lt;- genome_counts_filt %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% as.matrix() %&gt;% tax_table() #convert to phyloseq tax_table object phylo_tree &lt;- phy_tree(genome_tree) physeq_genome &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples,phylo_tree) physeq_genome_clr &lt;- microbiome::transform(physeq_genome, &#39;clr&#39;) 2.5 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, physeq_genome, physeq_genome_clr, genome_gifts_raw, # genome_gifts, phylum_colors, diet_colors, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 filter samples with high host data 3.2 Sequencing reads statistics 3.3 DNA fractions 3.4 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 filter samples with high host data sample_metadata &lt;- sample_metadata%&gt;% filter(!sample %in% c(&quot;EHI02721&quot;, &quot;EHI02712&quot;, &quot;EHI02700&quot;, &quot;EHI02720&quot;, &quot;EHI02749&quot;, &quot;EHI02719&quot;, &quot;EHI02729&quot;, &quot;EHI02715&quot;, &quot;EHI02722&quot;)) read_counts &lt;- read_counts %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) genome_metadata &lt;- genome_metadata %&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts1$genome)) genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips #load(&quot;data/genome_gifts.Rdata&quot;) 3.2 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() tinytable_u318x1gyq6i3fzmrejp2 .table td.tinytable_css_98fjrf1p6dkuoo82cx0s, .table th.tinytable_css_98fjrf1p6dkuoo82cx0s { border-bottom: solid 0.1em #d3d8dc; } Total Average 222.06 4.93 ± 1.08 3.3 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% select(sample,mags,metagenomic_bases,host_bases,bases_lost_fastp_percent) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() tinytable_a08cp9tugrxlq5p3c3y0 .table td.tinytable_css_0epnf26r7g4qd4wbnk3t, .table th.tinytable_css_0epnf26r7g4qd4wbnk3t { border-bottom: solid 0.1em #d3d8dc; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI01861 0.2815721 0.011886522 1.2899665 2.94492935 EHI01963 0.2379339 0.377956197 0.7686364 2.26737109 EHI01964 0.3498799 2.739970327 0.5635412 1.32056898 EHI01965 0.3583169 0.398887483 1.3439432 3.82431144 EHI01969 0.2444974 0.026139904 0.7635264 2.53338864 EHI01971 0.3382550 0.014993899 1.0255034 3.94601821 EHI01972 0.4703327 0.054667824 1.3684974 5.49040300 EHI01973 0.3347793 0.064729480 1.5130592 4.84065102 EHI01974 0.3671355 0.052747090 0.8921925 2.95848005 EHI01975 0.4305111 0.123580711 1.9003492 5.31791948 EHI01976 0.3856202 0.011574334 1.2666400 3.26276449 EHI01977 0.4158680 0.747098387 1.7867623 3.87494103 EHI01978 0.3929906 0.004864216 1.2394723 3.63470402 EHI01980 0.3711274 0.013798033 1.7409090 5.56779249 EHI01981 0.3633649 0.020488667 1.2293197 3.03525532 EHI01983 0.2418940 0.146776195 0.8284920 2.84914941 EHI01984 0.4431283 0.007477209 1.2629388 5.76052943 EHI01986 0.3104557 0.016788774 0.9597449 3.38641569 EHI01987 0.4292930 0.001120181 0.9160842 3.32218036 EHI01988 0.2963428 0.197271999 1.0599471 3.92577283 EHI01990 0.3186345 0.010910854 1.0992821 3.87615385 EHI01991 0.3161992 0.021159611 1.1871737 2.82147205 EHI01993 0.2026808 0.006054774 0.5074436 2.59915566 EHI01994 0.3359364 0.064796021 0.9475828 3.88007790 EHI02699 0.2717760 0.007940738 1.1803471 3.05661322 EHI02700 0.3187046 3.815365599 0.7469281 0.43060671 EHI02701 0.2059134 0.135887208 0.9201707 2.92496093 EHI02705 0.2326028 0.134644975 1.0103929 3.05008177 EHI02707 0.2133975 0.197419011 1.0367591 2.56043485 EHI02708 0.3287951 0.247517459 1.4970876 3.72574889 EHI02710 0.2905179 0.004863423 1.1544139 3.25985646 EHI02712 0.3735243 4.162982418 0.5973263 0.12825939 EHI02714 0.2229262 0.166057029 0.7697399 3.24492767 EHI02715 0.3350685 3.050470506 0.9265001 0.43417816 EHI02718 0.2124597 1.622070570 0.4994065 1.33393017 EHI02719 0.3330425 2.607725990 1.8321792 0.33907536 EHI02720 0.3031357 3.089773324 0.7364466 0.19044999 EHI02721 0.3228625 3.677630914 0.6704712 0.08601152 EHI02722 0.3095520 2.799929187 0.7276464 0.41217450 EHI02723 0.2730593 0.113227422 0.9750562 3.21338043 EHI02724 0.3551211 0.121469083 0.9809314 3.69454095 EHI02728 0.3109121 1.043367740 0.9818139 2.94984474 EHI02729 0.3043389 2.024187975 1.5671125 0.47668212 EHI02749 0.4389880 4.177705067 0.7870159 0.53921786 EHI02751 0.4202354 3.712236730 0.7804933 1.77651793 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() tinytable_jcvwabcq2m2h2k1ly7sc .table td.tinytable_css_rvko44igy405qmpbnyxc, .table th.tinytable_css_rvko44igy405qmpbnyxc { border-bottom: solid 0.1em #d3d8dc; } Low quality Mapped to host Unmapped Mapped to MAGs 0.3247485 0.9344047 1.063094 2.779287 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;))) %&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.4 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = round(singlem_fraction*100,2)) %&gt;% select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) damr &lt;- singlem_table %&gt;% mutate(damr=ifelse(is.na(singlem_proportion),100,mags_proportion/singlem_proportion*100)) %&gt;% select(sample,damr) damr %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% filter(diet==&quot;Wild&quot;)%&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() tinytable_yln5pxx6pcll08exkkru .table td.tinytable_css_obvshmiabxs5oxbd94cm, .table th.tinytable_css_obvshmiabxs5oxbd94cm { border-bottom: solid 0.1em #d3d8dc; } mean sd 53.68476 25.59637 damr %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% filter(region==&quot;Nafarroa&quot;)%&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() tinytable_p37cu3r5s5sfzv83jgk9 .table td.tinytable_css_bl3r84lvomd53zpx73qy, .table th.tinytable_css_bl3r84lvomd53zpx73qy { border-bottom: solid 0.1em #d3d8dc; } mean sd 75.85542 4.081913 damr %&gt;% tt() tinytable_ghtu9zui1cip00zcz82r .table td.tinytable_css_x8unzwct516vxt50ckza, .table th.tinytable_css_x8unzwct516vxt50ckza { border-bottom: solid 0.1em #d3d8dc; } sample damr EHI01861 69.54 EHI01963 74.68 EHI01964 70.09 EHI01965 74.00 EHI01969 76.84 EHI01971 79.37 EHI01972 80.05 EHI01973 76.19 EHI01974 76.83 EHI01975 73.67 EHI01976 72.04 EHI01977 68.44 EHI01978 74.57 EHI01980 76.18 EHI01981 71.17 EHI01983 77.47 EHI01984 82.02 EHI01986 77.92 EHI01987 78.39 EHI01988 78.74 EHI01990 77.91 EHI01991 70.38 EHI01993 83.67 EHI01994 80.37 EHI02699 72.14 EHI02700 36.57 EHI02701 76.07 EHI02705 75.12 EHI02707 71.18 EHI02708 71.34 EHI02710 73.85 EHI02712 17.68 EHI02714 80.83 EHI02715 31.91 EHI02718 72.76 EHI02719 15.62 EHI02720 20.55 EHI02721 11.37 EHI02722 36.16 EHI02723 76.72 EHI02724 79.02 EHI02728 75.03 EHI02729 23.32 EHI02749 40.66 EHI02751 69.48 damr %&gt;% filter(damr&gt;95) %&gt;% nrow() [1] 0 damr %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() tinytable_q7qu31vhr1cxxtdjo4jd .table td.tinytable_css_hetcr07xbzjbso5skjj6, .table th.tinytable_css_hetcr07xbzjbso5skjj6 { border-bottom: solid 0.1em #d3d8dc; } mean sd 65.50911 20.77582 "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 filter samples with high host data 4.2 Genome phylogeny 4.3 Taxonomy overview 4.4 Mag size (MB) 4.5 Genome quality 4.6 Functional overview 4.7 Functional ordination", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 filter samples with high host data sample_metadata &lt;- sample_metadata%&gt;% filter(!sample %in% c(&quot;EHI02721&quot;, &quot;EHI02712&quot;, &quot;EHI02700&quot;, &quot;EHI02720&quot;, &quot;EHI02749&quot;, &quot;EHI02719&quot;, &quot;EHI02729&quot;, &quot;EHI02715&quot;, &quot;EHI02722&quot;)) genome_counts_filt &lt;- genome_counts %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) genome_metadata &lt;- genome_metadata %&gt;% semi_join(., genome_counts_filt, by = &quot;genome&quot;) %&gt;% arrange(match(genome,genome_counts_filt$genome)) genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips #load(&quot;data/genome_gifts.Rdata&quot;) 4.2 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.6, y=0, label=&#39; Phylum&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.7, y=0, label=&#39; Genome quality&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=5.3, y=0, label=&#39; Genome size&#39;, family=&#39;arial&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.3 Taxonomy overview genome_metadata %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) %&gt;% arrange(-mag_n) %&gt;% tt() tinytable_04a7djey13b6evig3cwg .table td.tinytable_css_xv1czn5lo93l9krodmhp, .table th.tinytable_css_xv1czn5lo93l9krodmhp { border-bottom: solid 0.1em #d3d8dc; } phylum mag_n p__Bacillota_A 526 p__Bacteroidota 127 p__Bacillota 53 p__Pseudomonadota 39 p__Verrucomicrobiota 35 p__Synergistota 18 p__Actinomycetota 15 p__Patescibacteria 13 p__Desulfobacterota 12 p__Bacillota_C 9 p__Cyanobacteriota 7 p__Bacillota_B 2 p__Spirochaetota 2 p__Campylobacterota 1 p__Methanobacteriota 1 4.4 Mag size (MB) Mags average size (MB) genome_metadata %&gt;% summarise(Average_size=mean(length)) # A tibble: 1 × 1 Average_size &lt;dbl&gt; 1 2102306. Minimum Mags size (MB) genome_metadata %&gt;% filter(length==min(length)) # A tibble: 1 × 11 genome domain phylum class order family genus species completeness contamination length &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 EHA03306_bin.234 d__Bacteria p__Patescibacteria c__Saccharimonadia o__S… f__Na… g__N… s__ 52.6 7.13 326026 Mags arrange by size (MB) genome_metadata %&gt;% arrange(length) # A tibble: 860 × 11 genome domain phylum class order family genus species completeness contamination length &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 EHA03306_bin.234 d__Bacteria p__Patescibacteria c__Saccharimona… o__S… f__Na… g__N… s__ 52.6 7.13 326026 2 EHA03306_bin.233 d__Bacteria p__Bacillota c__Bacilli o__R… f__UB… g__R… s__ 58.8 0.71 393300 3 EHA03305_bin.87 d__Bacteria p__Bacillota_A c__Clostridia o__C… f__CA… g__H… s__ 58.1 0.58 569748 4 EHA03337_bin.2 d__Bacteria p__Bacillota c__Bacilli o__R… f__UB… g__O… s__ 61.8 2.13 593604 5 EHA03305_bin.302 d__Bacteria p__Patescibacteria c__Saccharimona… o__S… f__Na… g__N… s__ 55.2 4.48 600188 6 EHA03305_bin.141 d__Bacteria p__Patescibacteria c__Saccharimona… o__S… f__Na… g__N… s__ 86.4 1.22 616303 7 EHA03306_bin.147 d__Bacteria p__Bacillota_A c__Clostridia o__T… f__CA… g__C… s__ 52.8 6.44 621291 8 EHA03290_bin.28 d__Bacteria p__Patescibacteria c__Saccharimona… o__S… f__Na… g__N… s__ 79.1 5.36 637327 9 EHA04588_bin.191 d__Bacteria p__Campylobacterota c__Campylobacte… o__C… f__He… g__H… s__ 58.3 1.22 637744 10 EHA03337_bin.34 d__Bacteria p__Bacillota_C c__Negativicutes o__S… f__Se… g__ s__ 51.6 0.1 652142 # ℹ 850 more rows Mags average size and completeness by phylum (MB) genome_metadata %&gt;% group_by(phylum) %&gt;% summarise(average_size=mean(length),average_comp=mean(completeness)) # A tibble: 15 × 3 phylum average_size average_comp &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 p__Actinomycetota 1487860. 76.6 2 p__Bacillota 1297997. 83.9 3 p__Bacillota_A 2041433. 81.5 4 p__Bacillota_B 1738690 90 5 p__Bacillota_C 1510294. 90.9 6 p__Bacteroidota 3077607. 76.6 7 p__Campylobacterota 637744 58.3 8 p__Cyanobacteriota 1722146. 93.0 9 p__Desulfobacterota 1892601. 85.5 10 p__Methanobacteriota 1705853 99.8 11 p__Patescibacteria 763324. 77.4 12 p__Pseudomonadota 2121766. 82.7 13 p__Spirochaetota 1944581 94.7 14 p__Synergistota 1619963. 75.8 15 p__Verrucomicrobiota 2066309. 81.2 4.5 Genome quality genome_metadata %&gt;% summarise(completeness_mean=mean(completeness) %&gt;% round(2) %&gt;% as.character(), completeness_sd=sd(completeness) %&gt;% round(2) %&gt;% as.character(), contamination_mean=mean(contamination) %&gt;% round(2), contamination_sd=sd(contamination) %&gt;% round(2)) %&gt;% unite(&quot;Completeness&quot;,completeness_mean, completeness_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% unite(&quot;Contamination&quot;,contamination_mean, contamination_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() tinytable_dg1ivo1mj5mssey6na5x .table td.tinytable_css_lq9agcjylkehtq06dr2p, .table th.tinytable_css_lq9agcjylkehtq06dr2p { border-bottom: solid 0.1em #d3d8dc; } Completeness Contamination 80.99 ± 16.79 2.21 ± 2.32 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.6 Functional overview # Aggregate basal GIFT into elements genome_gifts&lt;-genome_gifts_raw function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.7 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Filter data 5.2 Load data 5.3 Taxonomy overview 5.4 Taxonomy boxplot", " Chapter 5 Community composition 5.1 Filter data load(&quot;data/data.Rdata&quot;) Filter samples with high host data sample_metadata &lt;- sample_metadata %&gt;% filter(!sample %in% c(&quot;EHI02721&quot;, &quot;EHI02712&quot;, &quot;EHI02700&quot;, &quot;EHI02720&quot;, &quot;EHI02749&quot;, &quot;EHI02719&quot;, &quot;EHI02729&quot;, &quot;EHI02715&quot;, &quot;EHI02722&quot;)) genome_counts_filt &lt;- genome_counts %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) genome_counts &lt;- genome_counts_filt genome_metadata &lt;- genome_metadata %&gt;% semi_join(., genome_counts_filt, by = &quot;genome&quot;) %&gt;% arrange(match(genome,genome_counts_filt$genome)) genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips #load(&quot;data/genome_gifts.Rdata&quot;) Make a phyloseq object phylo_samples &lt;- sample_metadata %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() #convert to phyloseq sample_data object phylo_genome &lt;- genome_counts_filt %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% as.matrix() %&gt;% tax_table() #convert to phyloseq tax_table object phylo_tree &lt;- phy_tree(genome_tree) physeq_genome &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples,phylo_tree) physeq_genome_clr &lt;- microbiome::transform(physeq_genome, &#39;clr&#39;) save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, physeq_genome, physeq_genome_clr, genome_gifts_raw, # genome_gifts, phylum_colors, diet_colors, file = &quot;data/data_host_filtered.Rdata&quot;) 5.2 Load data load(&quot;data/data_host_filtered.Rdata&quot;) 5.3 Taxonomy overview 5.3.1 Stacked barplot genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(diet!=&quot;Post_grass&quot;) %&gt;% filter(count &gt; 0) %&gt;% #filter 0 counts ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_grid(~factor(diet, labels=c(&quot;Pre_grass&quot; = &quot;Captive-born&quot;,&quot;Wild&quot; = &quot;Wild-born&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ # facet_nested(. ~ region+diet, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme( axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), strip.background = element_rect(fill = &quot;white&quot;), strip.text = element_text(size = 12, lineheight = 0.6), strip.placement = &quot;outside&quot;, axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) Number of bacteria phyla [1] 14 Bacteria phyla in wild individuals [1] 14 Bacteria phyla captive animals [1] 14 Bacteria phyla before grass is included in the diet [1] 14 Bacteria phyla after grass is included in the diet [1] 14 Number of Archaea phyla [1] 1 Archaea phyla in wild individuals [1] 0 Archaea phyla before grass is included in the diet [1] &quot;p__Methanobacteriota&quot; Archaea phyla after grass is included in the diet [1] &quot;p__Methanobacteriota&quot; 5.3.2 Genus and species annotation Number of MAGs without species-level annotation 749 Percentage of MAGs without species-level annotation 87.09302 Number of MAGs without genera-level annotation 79 5.3.3 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum,region, diet) %&gt;% summarise(relabun=sum(count)) phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[rev(phylum_arrange)]) + geom_jitter(alpha=0.5) + theme_minimal() + theme(legend.position=&quot;none&quot;) + labs(y=&quot;Phylum&quot;,x=&quot;Relative abundance&quot;) 5.3.3.1 Origin: Wild vs Captive phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), Wild_mean=mean(relabun[diet==&quot;Wild&quot;]*100, na.rm=T), Wild_sd=sd(relabun[diet==&quot;Wild&quot;]*100, na.rm=T), Captive_mean=mean(relabun[diet==&quot;Pre_grass&quot;]*100, na.rm=T), Captive_sd=sd(relabun[diet==&quot;Pre_grass&quot;]*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), Wild=str_c(round(Wild_mean,2),&quot;±&quot;,round(Wild_sd,2)), Captive=str_c(round(Captive_mean,6),&quot;±&quot;,round(Captive_sd,6))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total,Wild,Captive) # A tibble: 15 × 4 phylum total Wild Captive &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 p__Bacillota_A 57.24±12.62 48.64±13.52 59.845932±10.725422 2 p__Bacteroidota 25.79±10.11 26.89±11.81 24.986055±10.082621 3 p__Bacillota 4.12±7.2 5.07±11.15 4.94862±5.296738 4 p__Spirochaetota 3.91±10.01 11.73±14.79 0.00063±0.000727 5 p__Verrucomicrobiota 2.26±5.72 1.47±0.71 1.448674±1.294628 6 p__Pseudomonadota 1.63±3.33 0.51±0.4 3.082488±5.382343 7 p__Patescibacteria 0.99±1.54 0.21±0.25 2.176993±2.223404 8 p__Synergistota 0.96±0.85 1.86±0.83 0.449802±0.390105 9 p__Bacillota_C 0.84±0.79 1.7±0.67 0.385614±0.359883 10 p__Actinomycetota 0.78±0.99 0.43±0.46 1.217389±1.147372 11 p__Cyanobacteriota 0.71±2.08 0.28±0.61 0.915635±3.024426 12 p__Desulfobacterota 0.59±0.4 0.99±0.31 0.410146±0.255958 13 p__Bacillota_B 0.1±0.15 0.23±0.2 0.041532±0.023962 14 p__Methanobacteriota 0.08±0.22 0±0 0.090366±0.227643 15 p__Campylobacterota 0±0 0±0 0.000127±0.000226 5.3.3.2 Origin and diet phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), Wild_mean=mean(relabun[diet==&quot;Wild&quot;]*100, na.rm=T), Wild_sd=sd(relabun[diet==&quot;Wild&quot;]*100, na.rm=T), Pre_grass_mean=mean(relabun[diet==&quot;Pre_grass&quot;]*100, na.rm=T), Pre_grass_sd=sd(relabun[diet==&quot;Pre_grass&quot;]*100, na.rm=T), Post_grass_mean=mean(relabun[diet==&quot;Post_grass&quot;]*100, na.rm=T), Post_grass_sd=sd(relabun[diet==&quot;Post_grass&quot;]*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), Wild=str_c(round(Wild_mean,2),&quot;±&quot;,round(Wild_sd,2)), Pre_grass=str_c(round(Pre_grass_mean,6),&quot;±&quot;,round(Pre_grass_sd,6)), Post_grass=str_c(round(Post_grass_mean,2),&quot;±&quot;,round(Post_grass_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total,Wild,Pre_grass,Post_grass) # A tibble: 15 × 5 phylum total Wild Pre_grass Post_grass &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 p__Bacillota_A 57.24±12.62 48.64±13.52 59.845932±10.725422 63.25±9.01 2 p__Bacteroidota 25.79±10.11 26.89±11.81 24.986055±10.082621 25.49±9.07 3 p__Bacillota 4.12±7.2 5.07±11.15 4.94862±5.296738 2.34±2.73 4 p__Spirochaetota 3.91±10.01 11.73±14.79 0.00063±0.000727 0±0 5 p__Verrucomicrobiota 2.26±5.72 1.47±0.71 1.448674±1.294628 3.87±9.89 6 p__Pseudomonadota 1.63±3.33 0.51±0.4 3.082488±5.382343 1.29±1.52 7 p__Patescibacteria 0.99±1.54 0.21±0.25 2.176993±2.223404 0.57±0.41 8 p__Synergistota 0.96±0.85 1.86±0.83 0.449802±0.390105 0.57±0.35 9 p__Bacillota_C 0.84±0.79 1.7±0.67 0.385614±0.359883 0.45±0.49 10 p__Actinomycetota 0.78±0.99 0.43±0.46 1.217389±1.147372 0.7±1.1 11 p__Cyanobacteriota 0.71±2.08 0.28±0.61 0.915635±3.024426 0.93±1.99 12 p__Desulfobacterota 0.59±0.4 0.99±0.31 0.410146±0.255958 0.36±0.25 13 p__Bacillota_B 0.1±0.15 0.23±0.2 0.041532±0.023962 0.04±0.02 14 p__Methanobacteriota 0.08±0.22 0±0 0.090366±0.227643 0.15±0.29 15 p__Campylobacterota 0±0 0±0 0.000127±0.000226 0±0 phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% left_join(genome_metadata %&gt;% select(phylum,phylum) %&gt;% unique(),by=join_by(phylum==phylum)) %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(phylum %in% phylum_arrange[1:20]) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~diet)+ theme_minimal() + labs(y=&quot;phylum&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.4 Taxonomy boxplot 5.4.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family, diet,region) %&gt;% summarise(relabun=sum(count)) family_summary$diet &lt;- factor(family_summary$diet, levels=c(&quot;Pre_grass&quot;, &quot;Post_grass&quot;, &quot;Wild&quot;)) 5.4.1.1 Origin: Wild vs Captive family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), Wild_mean=mean(relabun[diet==&quot;Wild&quot;]*100, na.rm=T), Wild_sd=sd(relabun[diet==&quot;Wild&quot;]*100, na.rm=T), Cap_mean=mean(relabun[region==&quot;Nafarroa&quot;]*100, na.rm=T), Cap_sd=sd(relabun[region==&quot;Nafarroa&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), Wild=str_c(round(Wild_mean,2),&quot;±&quot;,round(Wild_sd,2)), Captive=str_c(round(Cap_mean,2),&quot;±&quot;,round(Cap_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,Wild,Captive) %&gt;% tt() tinytable_zc83wk5gmsrqosnxm0t4 .table td.tinytable_css_1izmrxfhqo834tllfc7k, .table th.tinytable_css_1izmrxfhqo834tllfc7k { border-bottom: solid 0.1em #d3d8dc; } family Total Wild Captive f__Lachnospiraceae 21.69±9.91 18.46±10.79 23.3±9.26 f__Bacteroidaceae 17.22±8.91 18.2±9.79 16.73±8.61 f__Ruminococcaceae 10.01±7.82 9.16±9.9 10.44±6.76 f__Oscillospiraceae 7.11±4.79 9.05±6.73 6.14±3.21 f__Borkfalkiaceae 4.87±7.57 1.52±3.18 6.55±8.57 f__Sphaerochaetaceae 3.91±10.01 11.73±14.79 0±0 f__CAG-508 3.24±3.94 0.45±0.37 4.63±4.19 f__Marinifilaceae 2.49±1.42 3.1±1.62 2.19±1.23 f__CAG-74 2.47±2.63 4.7±3.41 1.36±1.04 f__UBA660 2.26±3.79 0.05±0.06 3.37±4.25 f__Acutalibacteraceae 2.14±1.03 1.88±1.17 2.28±0.95 f__Rikenellaceae 2.01±1.42 2.02±1.9 2.01±1.17 f__CAG-314 1.89±4.51 0.04±0.03 2.81±5.32 f__CAG-449 1.69±6.7 5.02±11.16 0.02±0.06 f__Muribaculaceae 1.33±1.73 0.28±0.48 1.85±1.9 f__UBA932 1.26±2.12 2.09±3.28 0.84±1.06 f__Victivallaceae 1.23±0.94 1.41±0.75 1.15±1.02 f__Tannerellaceae 1.2±0.61 1.12±0.79 1.25±0.5 f__Nanosyncoccaceae 0.99±1.54 0.21±0.25 1.37±1.77 f__Akkermansiaceae 0.97±5.81 0±0 1.45±7.12 f__Selenomonadaceae 0.73±0.81 1.69±0.67 0.24±0.23 f__Gastranaerophilaceae 0.71±2.08 0.28±0.61 0.92±2.5 f__CAG-274 0.67±0.66 0.8±0.64 0.6±0.68 f__Dethiosulfovibrionaceae 0.59±0.56 1.25±0.44 0.25±0.19 f__Desulfovibrionaceae 0.59±0.4 0.99±0.31 0.38±0.25 f__Atopobiaceae 0.53±0.85 0.2±0.23 0.69±0.99 f__Burkholderiaceae_A 0.51±0.39 0.46±0.39 0.54±0.4 f__CAG-239 0.49±1.84 0.03±0.1 0.72±2.23 f__CAG-917 0.42±0.68 0±0 0.63±0.75 f__Monoglobaceae 0.41±0.38 0.23±0.39 0.49±0.35 f__Synergistaceae 0.37±0.41 0.61±0.52 0.26±0.29 f__UMGS1883 0.37±0.41 0.19±0.29 0.46±0.43 f__UBA1381 0.36±0.31 0.37±0.22 0.35±0.35 f__UBA1242 0.34±0.65 0.12±0.13 0.46±0.77 f__Anaerovoracaceae 0.23±0.36 0.65±0.35 0.02±0.03 f__Eggerthellaceae 0.23±0.21 0.23±0.24 0.22±0.19 f__CAG-272 0.22±0.28 0.03±0.02 0.32±0.3 f__Pumilibacteraceae 0.21±0.39 0.02±0.03 0.31±0.45 f__Burkholderiaceae_C 0.18±1 0±0 0.26±1.22 f__Butyricicoccaceae 0.15±0.47 0.43±0.76 0.01±0.02 f__UBA1820 0.14±0.15 0.08±0.09 0.17±0.16 f__JAAYOS01 0.13±0.18 0.05±0.07 0.17±0.2 f__Acidaminococcaceae 0.12±0.38 0±0 0.18±0.45 f__Flavobacteriaceae 0.1±0.57 0±0 0.14±0.7 f__Halomonadaceae 0.09±0.29 0±0 0.14±0.35 f__ 0.08±0.21 0.17±0.28 0.04±0.15 f__Wohlfahrtiimonadaceae 0.08±0.48 0±0 0.12±0.58 f__Methanobacteriaceae 0.08±0.22 0±0 0.12±0.26 f__UBA644 0.08±0.15 0.02±0.06 0.11±0.18 f__Pseudomonadaceae 0.07±0.41 0±0.01 0.11±0.5 f__Alteromonadaceae 0.07±0.24 0.02±0.04 0.1±0.29 f__Xanthomonadaceae 0.07±0.24 0±0 0.1±0.29 f__Erysipelotrichaceae 0.07±0.15 0±0 0.1±0.18 f__UBA7702 0.06±0.11 0.12±0.17 0.03±0.02 f__UBA1829 0.06±0.12 0.06±0.17 0.06±0.08 f__UBA1750 0.06±0.11 0.15±0.16 0.01±0.03 f__Salinicoccaceae 0.06±0.19 0±0 0.09±0.22 f__Eubacteriaceae 0.05±0.1 0.1±0.15 0.02±0.04 f__Aeromonadaceae 0.05±0.27 0±0 0.07±0.33 f__Peptococcaceae 0.04±0.06 0.1±0.07 0.01±0.01 f__Balneolaceae 0.03±0.14 0±0 0.05±0.17 f__Staphylococcaceae 0.03±0.12 0±0 0.04±0.14 f__Mycobacteriaceae 0.03±0.06 0±0 0.04±0.07 f__Anaerotignaceae 0.02±0.04 0.06±0.05 0±0.01 f__Oleiphilaceae 0.02±0.08 0±0 0.03±0.1 f__Coprobacillaceae 0.02±0.1 0±0 0.03±0.12 f__CAG-382 0.01±0.04 0±0 0.01±0.05 f__Weeksellaceae 0±0 0±0 0±0 f__Neisseriaceae 0±0 0±0 0±0 f__Streptococcaceae 0±0 0±0 0±0 f__Helicobacteraceae 0±0 0±0 0±0 f__Moraxellaceae 0±0 0±0 0±0 f__Pasteurellaceae 0±0 0±0 0±0 f__UBA2023 0±0 0±0 0±0 f__Cardiobacteriaceae 0±0 0±0 0±0 5.4.1.2 Origin and Diet family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), Wild_mean=mean(relabun[diet==&quot;Wild&quot;]*100, na.rm=T), Wild_sd=sd(relabun[diet==&quot;Wild&quot;]*100, na.rm=T), Pre_grass_mean=mean(relabun[diet==&quot;Pre_grass&quot;]*100, na.rm=T), Pre_grass_sd=sd(relabun[diet==&quot;Pre_grass&quot;]*100, na.rm=T), Post_grass_mean=mean(relabun[diet==&quot;Post_grass&quot;]*100, na.rm=T), Post_grass_sd=sd(relabun[diet==&quot;Post_grass&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), Wild=str_c(round(Wild_mean,2),&quot;±&quot;,round(Wild_sd,2)), Pre_grass=str_c(round(Pre_grass_mean,2),&quot;±&quot;,round(Pre_grass_sd,2)), Post_grass=str_c(round(Post_grass_mean,2),&quot;±&quot;,round(Post_grass_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,Wild,Pre_grass,Post_grass) %&gt;% tt() tinytable_3xncfr8po4gx7qt4irm1 .table td.tinytable_css_le4xqsfzrerkhc1n0prd, .table th.tinytable_css_le4xqsfzrerkhc1n0prd { border-bottom: solid 0.1em #d3d8dc; } family Total Wild Pre_grass Post_grass f__Lachnospiraceae 21.69±9.91 18.46±10.79 23.69±8.7 22.91±10.16 f__Bacteroidaceae 17.22±8.91 18.2±9.79 16.79±9.7 16.68±7.82 f__Ruminococcaceae 10.01±7.82 9.16±9.9 11.75±8.53 9.12±4.36 f__Oscillospiraceae 7.11±4.79 9.05±6.73 5.21±2.15 7.08±3.87 f__Borkfalkiaceae 4.87±7.57 1.52±3.18 4.6±5.72 8.49±10.62 f__Sphaerochaetaceae 3.91±10.01 11.73±14.79 0±0 0±0 f__CAG-508 3.24±3.94 0.45±0.37 5.81±4.22 3.46±3.98 f__Marinifilaceae 2.49±1.42 3.1±1.62 2.11±1.3 2.27±1.21 f__CAG-74 2.47±2.63 4.7±3.41 1.03±0.72 1.68±1.24 f__UBA660 2.26±3.79 0.05±0.06 4.57±5.23 2.17±2.7 f__Acutalibacteraceae 2.14±1.03 1.88±1.17 2.3±0.79 2.26±1.13 f__Rikenellaceae 2.01±1.42 2.02±1.9 2.14±1.45 1.88±0.83 f__CAG-314 1.89±4.51 0.04±0.03 1.54±2.53 4.08±7.01 f__CAG-449 1.69±6.7 5.02±11.16 0.03±0.08 0±0 f__Muribaculaceae 1.33±1.73 0.28±0.48 1.23±1.33 2.46±2.22 f__UBA932 1.26±2.12 2.09±3.28 1.04±1.21 0.65±0.9 f__Victivallaceae 1.23±0.94 1.41±0.75 1.38±1.25 0.91±0.71 f__Tannerellaceae 1.2±0.61 1.12±0.79 1.17±0.58 1.32±0.42 f__Nanosyncoccaceae 0.99±1.54 0.21±0.25 2.18±2.22 0.57±0.41 f__Akkermansiaceae 0.97±5.81 0±0 0±0 2.9±10.06 f__Selenomonadaceae 0.73±0.81 1.69±0.67 0.21±0.19 0.27±0.28 f__Gastranaerophilaceae 0.71±2.08 0.28±0.61 0.92±3.02 0.93±1.99 f__CAG-274 0.67±0.66 0.8±0.64 0.59±0.5 0.62±0.84 f__Dethiosulfovibrionaceae 0.59±0.56 1.25±0.44 0.19±0.15 0.32±0.21 f__Desulfovibrionaceae 0.59±0.4 0.99±0.31 0.41±0.26 0.36±0.25 f__Atopobiaceae 0.53±0.85 0.2±0.23 0.88±0.98 0.51±1 f__Burkholderiaceae_A 0.51±0.39 0.46±0.39 0.6±0.52 0.47±0.24 f__CAG-239 0.49±1.84 0.03±0.1 0.99±3.04 0.44±1 f__CAG-917 0.42±0.68 0±0 0.61±0.76 0.66±0.77 f__Monoglobaceae 0.41±0.38 0.23±0.39 0.56±0.39 0.42±0.3 f__Synergistaceae 0.37±0.41 0.61±0.52 0.26±0.38 0.25±0.17 f__UMGS1883 0.37±0.41 0.19±0.29 0.31±0.29 0.6±0.51 f__UBA1381 0.36±0.31 0.37±0.22 0.3±0.37 0.41±0.33 f__UBA1242 0.34±0.65 0.12±0.13 0.41±0.58 0.5±0.94 f__Anaerovoracaceae 0.23±0.36 0.65±0.35 0.02±0.02 0.02±0.03 f__Eggerthellaceae 0.23±0.21 0.23±0.24 0.29±0.22 0.16±0.13 f__CAG-272 0.22±0.28 0.03±0.02 0.42±0.39 0.21±0.13 f__Pumilibacteraceae 0.21±0.39 0.02±0.03 0.25±0.29 0.37±0.57 f__Burkholderiaceae_C 0.18±1 0±0 0.53±1.72 0±0.01 f__Butyricicoccaceae 0.15±0.47 0.43±0.76 0.01±0.01 0.02±0.02 f__UBA1820 0.14±0.15 0.08±0.09 0.2±0.19 0.15±0.13 f__JAAYOS01 0.13±0.18 0.05±0.07 0.21±0.25 0.14±0.15 f__Acidaminococcaceae 0.12±0.38 0±0 0.17±0.41 0.18±0.51 f__Flavobacteriaceae 0.1±0.57 0±0 0.28±0.98 0±0 f__Halomonadaceae 0.09±0.29 0±0 0.15±0.36 0.13±0.36 f__ 0.08±0.21 0.17±0.28 0.07±0.21 0.01±0.01 f__Wohlfahrtiimonadaceae 0.08±0.48 0±0 0.25±0.82 0±0 f__Methanobacteriaceae 0.08±0.22 0±0 0.09±0.23 0.15±0.29 f__UBA644 0.08±0.15 0.02±0.06 0.09±0.05 0.14±0.25 f__Pseudomonadaceae 0.07±0.41 0±0.01 0.21±0.71 0.01±0.01 f__Alteromonadaceae 0.07±0.24 0.02±0.04 0.12±0.38 0.08±0.18 f__Xanthomonadaceae 0.07±0.24 0±0 0.06±0.16 0.14±0.38 f__Erysipelotrichaceae 0.07±0.15 0±0 0.11±0.18 0.09±0.18 f__UBA7702 0.06±0.11 0.12±0.17 0.03±0.02 0.04±0.02 f__UBA1829 0.06±0.12 0.06±0.17 0.07±0.1 0.06±0.06 f__UBA1750 0.06±0.11 0.15±0.16 0.01±0.01 0.02±0.04 f__Salinicoccaceae 0.06±0.19 0±0 0.1±0.31 0.07±0.09 f__Eubacteriaceae 0.05±0.1 0.1±0.15 0.04±0.05 0±0.01 f__Aeromonadaceae 0.05±0.27 0±0 0.14±0.46 0±0 f__Peptococcaceae 0.04±0.06 0.1±0.07 0.01±0.01 0.01±0.01 f__Balneolaceae 0.03±0.14 0±0 0.02±0.08 0.07±0.23 f__Staphylococcaceae 0.03±0.12 0±0 0.08±0.2 0.01±0.02 f__Mycobacteriaceae 0.03±0.06 0±0 0.05±0.08 0.04±0.05 f__Anaerotignaceae 0.02±0.04 0.06±0.05 0±0.01 0.01±0.01 f__Oleiphilaceae 0.02±0.08 0±0 0.04±0.13 0.02±0.03 f__Coprobacillaceae 0.02±0.1 0±0 0.05±0.17 0±0 f__CAG-382 0.01±0.04 0±0 0.02±0.08 0±0.01 f__Weeksellaceae 0±0 0±0 0±0 0±0 f__Neisseriaceae 0±0 0±0 0±0 0±0 f__Streptococcaceae 0±0 0±0 0±0 0±0 f__Helicobacteraceae 0±0 0±0 0±0 0±0 f__Moraxellaceae 0±0 0±0 0±0 0±0 f__Pasteurellaceae 0±0 0±0 0±0 0±0 f__UBA2023 0±0 0±0 0±0 0±0 f__Cardiobacteriaceae 0±0 0±0 0±0 0±0 family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~diet)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.4.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,phylum,genus, diet) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) genus_summary$diet &lt;- factor(genus_summary$diet, levels=c(&quot;Pre_grass&quot;, &quot;Post_grass&quot;, &quot;Wild&quot;)) 5.4.3 origin and diet genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), Wild_mean=mean(relabun[diet==&quot;Wild&quot;]*100, na.rm=T), Wild_sd=sd(relabun[diet==&quot;Wild&quot;]*100, na.rm=T), Pre_grass_mean=mean(relabun[diet==&quot;Pre_grass&quot;]*100, na.rm=T), Pre_grass_sd=sd(relabun[diet==&quot;Pre_grass&quot;]*100, na.rm=T), Post_grass_mean=mean(relabun[diet==&quot;Post_grass&quot;]*100, na.rm=T), Post_grass_sd=sd(relabun[diet==&quot;Post_grass&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), Wild=str_c(round(Wild_mean,2),&quot;±&quot;,round(Wild_sd,2)), Pre_grass=str_c(round(Pre_grass_mean,2),&quot;±&quot;,round(Pre_grass_sd,2)), Post_grass=str_c(round(Post_grass_mean,2),&quot;±&quot;,round(Post_grass_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,Total,Wild,Pre_grass,Post_grass) %&gt;% tt() tinytable_v1h96b2f8r732abhdnuo .table td.tinytable_css_e8eidu3e2eec9a32un7m, .table th.tinytable_css_e8eidu3e2eec9a32un7m { border-bottom: solid 0.1em #d3d8dc; } genus Total Wild Pre_grass Post_grass Bacteroides 11.45±7.42 10.71±8.63 12.01±7.78 11.63±6.26 Eisenbergiella 9.15±9.45 4.11±11.28 11.85±6.46 11.49±8.57 Phocaeicola 4.75±2.03 5.26±2.32 4.37±2.02 4.64±1.78 UBA9732 3.91±10.01 11.73±14.79 0±0 0±0 Coproplasma 2.59±5.68 0.67±2.29 2.05±3.56 5.05±8.59 Gallimonas 2.28±4.19 0.85±2.4 2.55±3.63 3.44±5.77 UBA7477 2.17±5.94 0.02±0.01 4.95±9.5 1.54±2.86 CAJOIG01 1.97±1.72 2.73±1.76 1.42±1.39 1.77±1.82 Alistipes 1.84±1.42 1.93±1.94 1.91±1.43 1.68±0.74 Fimimonas 1.83±4.48 0.03±0.03 1.47±2.55 4±6.97 Enterenecus 1.78±2.42 3.34±3.63 0.76±0.38 1.23±1.07 UBA1366 1.36±1.8 0.27±0.18 1.68±2.05 2.13±2 Ruminococcus_D 1.3±1.55 0.24±0.28 1.85±1.89 1.81±1.47 CAG-269 1.3±1.53 0.21±0.17 2.39±1.62 1.29±1.47 Egerieousia 1.26±2.12 2.09±3.28 1.04±1.21 0.65±0.9 Gabonibacter 1.24±0.78 1.74±0.87 0.95±0.58 1.04±0.64 Odoribacter 1.22±0.94 1.36±1.26 1.11±0.8 1.2±0.72 Parabacteroides 1.2±0.61 1.12±0.79 1.17±0.58 1.32±0.42 Choladousia 1.17±1.12 1.77±1.17 0.68±0.86 1.05±1.09 UBA3402 1.1±0.68 1.13±0.61 1.12±0.74 1.05±0.74 Nanosyncoccus 0.99±1.54 0.21±0.25 2.18±2.22 0.57±0.41 Akkermansia 0.97±5.81 0±0 0±0 2.9±10.06 Merdiplasma 0.96±1.7 2.87±1.81 0.01±0.01 0.01±0.01 COE1 0.95±1.32 0.75±2.06 1.17±0.92 0.93±0.55 UBA3282 0.9±1.95 0.04±0.03 0.84±1.31 1.81±2.95 Blautia_A 0.86±1.19 1.48±1.84 0.5±0.36 0.6±0.6 RUG626 0.82±1.2 0.17±0.25 1.12±1.01 1.19±1.68 V9D3004 0.82±1.18 1.1±1.85 0.7±0.62 0.66±0.71 Ventricola 0.81±0.91 0.84±0.69 0.51±0.5 1.08±1.32 Victivallis 0.79±0.65 1.03±0.58 0.84±0.82 0.5±0.42 MGBC124762 0.78±1.48 1.46±2.23 0.28±0.42 0.59±0.99 Fimenecus 0.64±0.77 0.2±0.52 1.11±0.9 0.62±0.61 Pyramidobacter 0.59±0.56 1.25±0.44 0.19±0.15 0.32±0.21 Stercorousia 0.58±1.99 0.18±0.57 0.89±3.02 0.67±1.69 CAG-485 0.56±0.61 0.23±0.48 0.56±0.62 0.9±0.56 Paraprevotella 0.55±1.81 1.42±3.02 0.16±0.2 0.08±0.05 Parasutterella 0.51±0.39 0.46±0.39 0.6±0.52 0.47±0.24 Mailhella 0.46±0.41 0.92±0.32 0.23±0.19 0.22±0.21 CALXXL01 0.44±0.39 0.38±0.28 0.54±0.52 0.41±0.34 Avilachnospira 0.44±0.99 1.31±1.36 0±0 0.02±0.04 Choladocola 0.44±0.55 0.22±0.6 0.59±0.58 0.5±0.45 Ruminococcus 0.43±0.62 0.33±0.33 0.34±0.27 0.61±0.99 CAG-590 0.42±0.94 0.04±0.09 0.75±1.28 0.47±0.94 Roseburia 0.42±0.87 0.08±0.11 0.43±0.67 0.73±1.31 UBA3855 0.41±0.57 0.29±0.65 0.34±0.39 0.6±0.64 HGM10766 0.41±2.16 0±0 1.19±3.72 0.02±0.03 Monoglobus 0.41±0.38 0.23±0.39 0.56±0.39 0.42±0.3 MGBC105563 0.4±0.77 0.12±0.24 0.63±0.89 0.43±0.94 UMGS1601 0.4±0.65 0.15±0.29 0.32±0.37 0.72±0.97 Pelethomonas 0.39±0.43 0.27±0.63 0.35±0.21 0.54±0.31 Scatovivens 0.38±0.94 0±0 0.86±1.45 0.28±0.56 Caccocola 0.37±0.41 0.61±0.52 0.26±0.38 0.25±0.17 Gemmiger 0.37±0.92 0.53±1.18 0.36±1.04 0.21±0.42 Phocaeicola_A 0.35±0.34 0.5±0.45 0.24±0.19 0.32±0.31 CAG-452 0.34±0.93 0.02±0.03 0.86±1.48 0.15±0.32 Muribaculum 0.34±1.08 0.01±0.01 0.4±1.09 0.6±1.53 UMGS1663 0.34±0.87 0.05±0.04 0.6±1.29 0.37±0.73 14-2 0.32±1.87 0±0.01 0.94±3.24 0.01±0 CAJMNU01 0.3±1.8 0±0 0.9±3.12 0.01±0 UBA1213 0.3±0.54 0.09±0.24 0.27±0.31 0.54±0.82 UBA6857 0.29±0.41 0.7±0.51 0.08±0.05 0.08±0.04 UBA1224 0.29±0.73 0.85±1.09 0.01±0.01 0.01±0.01 CALWRD01 0.29±0.32 0.06±0.09 0.39±0.34 0.41±0.35 Paramuribaculum 0.26±0.38 0.04±0.02 0.26±0.25 0.49±0.52 JAJQCX01 0.25±0.32 0.02±0.01 0.24±0.22 0.49±0.39 Marvinbryantia 0.25±0.35 0.06±0.02 0.42±0.43 0.26±0.38 SIG200 0.23±0.79 0±0 0.54±1.29 0.16±0.41 SFTH01 0.23±0.35 0.47±0.5 0.11±0.11 0.1±0.14 Aphodocola 0.22±0.79 0±0 0.61±1.3 0.06±0.18 Limadaptatus 0.21±0.49 0±0 0.38±0.7 0.26±0.41 CAG-475 0.21±0.52 0±0 0.23±0.51 0.39±0.72 Copromonas 0.21±0.22 0.24±0.32 0.13±0.12 0.25±0.18 CAG-95 0.21±0.97 0.01±0.01 0.07±0.05 0.54±1.67 Schaedlerella 0.2±0.47 0.02±0.01 0.15±0.15 0.44±0.75 Lawsonibacter 0.2±0.26 0.39±0.27 0.09±0.2 0.11±0.22 Eubacterium_R 0.19±0.34 0.03±0.01 0.32±0.39 0.24±0.4 RGIG2066 0.19±0.4 0.58±0.51 0±0 0±0 CAG-552 0.19±0.31 0.01±0.03 0.25±0.29 0.29±0.41 CAG-353 0.18±0.86 0±0 0.41±1.42 0.14±0.48 Acetatifactor 0.18±0.21 0.06±0.04 0.26±0.31 0.23±0.15 RUG115 0.18±0.47 0.34±0.8 0.12±0.08 0.09±0.06 Marseille-P3106 0.17±0.37 0.02±0.04 0.22±0.3 0.28±0.55 Alistipes_A 0.17±0.12 0.09±0.08 0.23±0.1 0.2±0.13 UMGS2069 0.17±0.18 0.12±0.14 0.21±0.27 0.17±0.11 Dysosmobacter 0.16±0.16 0.24±0.22 0.13±0.12 0.12±0.08 Duncaniella 0.16±0.93 0±0 0.01±0.02 0.48±1.61 Eubacterium_I 0.16±0.28 0.44±0.35 0.01±0.01 0.02±0.03 Eubacterium_G 0.15±0.27 0.01±0.01 0.28±0.39 0.17±0.2 Pseudoruminococcus 0.15±0.34 0±0 0.2±0.37 0.26±0.43 Ventrimonas 0.15±0.27 0.29±0.37 0.12±0.24 0.03±0.02 UMGS995 0.15±0.52 0±0 0.4±0.87 0.04±0.07 Paenalcaligenes 0.14±0.81 0±0 0.43±1.4 0±0.01 Merdimorpha 0.14±0.15 0.08±0.09 0.2±0.19 0.15±0.13 CAG-103 0.14±0.49 0±0 0.13±0.39 0.3±0.75 MGBC163016 0.14±0.15 0.05±0.04 0.23±0.19 0.15±0.13 CAG-793 0.14±0.34 0.02±0.02 0.23±0.42 0.17±0.4 RGIG3926 0.14±0.35 0.41±0.53 0±0 0±0 CAG-41 0.14±0.26 0.03±0.05 0.19±0.35 0.19±0.27 CALXFK01 0.13±0.18 0.05±0.07 0.21±0.25 0.14±0.15 Onthocola_B 0.13±0.42 0±0 0.38±0.68 0.01±0.02 Butyricicoccus_A 0.13±0.47 0.36±0.78 0.01±0.01 0.01±0.02 Coprococcus 0.13±0.33 0.01±0.02 0.11±0.09 0.27±0.55 UBA5578 0.13±0.58 0±0.02 0.08±0.19 0.29±0.99 Caccovivens 0.12±0.36 0±0 0.2±0.44 0.18±0.43 RUG11788 0.12±0.37 0±0 0.08±0.19 0.28±0.59 CAG-266 0.12±0.38 0±0 0.17±0.41 0.18±0.51 Mediterranea 0.11±0.6 0.31±1.03 0.01±0.01 0.01±0.01 Fimivicinus 0.11±0.43 0.01±0.02 0.01±0 0.32±0.71 Acutalibacter 0.11±0.15 0.08±0.05 0.11±0.16 0.13±0.19 UBA11774 0.1±0.37 0.26±0.62 0.03±0.02 0.02±0.02 Hominisplanchenecus 0.1±0.08 0.13±0.06 0.1±0.11 0.08±0.05 CALXJL01 0.1±0.54 0±0 0.3±0.93 0.01±0.01 Ventrenecus 0.1±0.38 0±0 0.28±0.63 0.01±0.01 Flavobacterium 0.1±0.57 0±0 0.28±0.98 0±0 Halomonas 0.09±0.29 0±0 0.15±0.36 0.13±0.36 UBA738 0.09±0.33 0.27±0.55 0±0 0.01±0 JAAWPK01 0.09±0.27 0.12±0.26 0.13±0.39 0.03±0.05 RGIG2774 0.09±0.3 0.25±0.49 0±0 0±0 UBA3789 0.09±0.34 0±0 0.03±0.03 0.23±0.58 UMGS973 0.08±0.17 0.22±0.24 0.01±0.02 0.02±0.03 CALWPC01 0.08±0.17 0.19±0.26 0.04±0.05 0.02±0.01 Methanosphaera 0.08±0.22 0±0 0.09±0.23 0.15±0.29 Geddesella 0.08±0.15 0.02±0.06 0.09±0.05 0.14±0.25 UMGS1124 0.08±0.44 0±0 0±0.01 0.23±0.76 Butyribacter 0.08±0.11 0.01±0.01 0.14±0.13 0.08±0.12 Limivicinus 0.08±0.21 0±0 0.07±0.16 0.15±0.31 F23-B02 0.08±0.26 0±0 0.01±0.02 0.22±0.43 Zag111 0.07±0.43 0±0 0±0.01 0.22±0.74 Avispirillum 0.07±0.11 0±0 0.13±0.15 0.08±0.07 UBA11524 0.07±0.3 0±0 0.03±0.05 0.18±0.52 Aliidiomarina 0.07±0.24 0.02±0.04 0.12±0.38 0.08±0.18 Thiopseudomonas 0.07±0.41 0±0 0.21±0.71 0±0 Faecousia 0.07±0.25 0.01±0.01 0.19±0.42 0.01±0.01 Ignatzschineria 0.07±0.4 0±0 0.2±0.68 0±0 Luteimonas_D 0.07±0.24 0±0 0.06±0.16 0.14±0.38 Cryptoclostridium 0.06±0.11 0.12±0.17 0.03±0.02 0.04±0.02 CAG-115 0.06±0.34 0±0 0.18±0.59 0±0 UBA11452 0.06±0.12 0.06±0.17 0.07±0.1 0.06±0.06 UBA1428 0.06±0.11 0.15±0.16 0.01±0.01 0.02±0.04 RUG11130 0.06±0.15 0.02±0.02 0.12±0.25 0.04±0.03 JAFLUQ01 0.06±0.18 0.17±0.29 0.01±0.01 0±0 RUG14903 0.06±0.11 0.01±0.01 0.13±0.16 0.04±0.04 CAG-273 0.06±0.24 0±0 0.15±0.41 0.01±0.02 12844 0.06±0.15 0.01±0.02 0.04±0.05 0.12±0.24 Onthoplasma 0.05±0.32 0±0 0±0 0.16±0.55 Enterocloster 0.05±0.09 0.06±0.15 0.05±0.05 0.05±0.05 RUG591 0.05±0.3 0±0 0.15±0.53 0±0 Heteroclostridium 0.05±0.06 0.01±0.01 0.07±0.06 0.08±0.06 UBA2882 0.05±0.27 0±0 0.14±0.47 0.02±0.06 JAAWJJ01 0.05±0.12 0.15±0.17 0±0 0±0 CAKSQF01 0.05±0.08 0±0 0.08±0.09 0.06±0.09 Scatocola 0.05±0.22 0.03±0.1 0.11±0.37 0±0 Eubacterium_F 0.05±0.12 0.01±0.01 0.1±0.19 0.04±0.07 Ornithomonoglobus 0.05±0.14 0.13±0.23 0.01±0.02 0±0.01 Emergencia 0.05±0.08 0.13±0.08 0±0 0±0 UBA7067 0.05±0.1 0.02±0.05 0.05±0.08 0.06±0.15 Oceanisphaera 0.05±0.27 0±0 0.14±0.46 0±0 Ruminococcus_E 0.04±0.15 0.08±0.23 0.05±0.14 0.01±0.01 RUG12438 0.04±0.18 0±0 0.03±0.07 0.1±0.3 Caccovicinus 0.04±0.21 0±0.01 0.11±0.36 0.01±0.01 Ruminococcus_C 0.04±0.08 0.03±0.1 0.05±0.05 0.04±0.09 RGIG7179 0.04±0.08 0.12±0.09 0±0 0±0 UBA7185 0.04±0.06 0.1±0.07 0.01±0.01 0.01±0.01 UBA1066 0.04±0.09 0.12±0.12 0±0 0±0 Ruminiclostridium_E 0.04±0.18 0±0 0±0 0.11±0.31 Blautia 0.04±0.19 0±0 0.01±0.01 0.1±0.33 RUG11890 0.04±0.14 0±0 0.04±0.07 0.07±0.23 RUG762 0.04±0.17 0±0.01 0.09±0.3 0.01±0 Faecalimonas 0.03±0.11 0.1±0.17 0±0 0±0 MGBC119817 0.03±0.07 0±0 0.07±0.11 0.03±0.05 Scybalousia 0.03±0.16 0±0 0.08±0.28 0.02±0.07 Alangreenwoodia 0.03±0.06 0.1±0.06 0±0 0±0 Ruthenibacterium 0.03±0.05 0±0.01 0.05±0.07 0.04±0.05 UBA3818 0.03±0.05 0±0 0.03±0.02 0.07±0.06 Jeotgalicoccus 0.03±0.16 0±0 0.09±0.27 0.01±0.02 Oligella 0.03±0.18 0±0 0.09±0.32 0±0.01 Coprovivens 0.03±0.19 0±0 0±0 0.09±0.33 UBA2664 0.03±0.14 0±0 0.02±0.08 0.07±0.23 Bilophila 0.03±0.02 0.05±0.02 0.02±0.01 0.02±0.01 MGBC100174 0.03±0.06 0.03±0.07 0.02±0.03 0.04±0.06 Avigastranaerophilus 0.03±0.17 0.09±0.29 0±0 0±0 Butyricimonas 0.03±0.07 0.01±0 0.05±0.11 0.03±0.03 Staphylococcus 0.03±0.12 0±0 0.08±0.2 0.01±0.02 Corynebacterium 0.03±0.06 0±0 0.05±0.08 0.04±0.05 RGIG3102 0.03±0.06 0.08±0.09 0±0 0±0 JABUSF01 0.03±0.07 0±0 0.04±0.06 0.04±0.1 Salinicoccus 0.03±0.06 0±0 0.02±0.04 0.06±0.08 Protoclostridium 0.03±0.15 0±0 0±0 0.08±0.26 QAKD01 0.03±0.08 0.08±0.12 0±0 0±0 UBA3305 0.02±0.11 0.06±0.18 0.01±0.01 0.01±0 RGIG1902 0.02±0.04 0.06±0.04 0±0 0±0 Metalachnospira 0.02±0.04 0.06±0.05 0±0.01 0.01±0.01 CADBMC01 0.02±0.04 0.06±0.06 0.01±0.01 0±0.01 Angelakisella 0.02±0.05 0.07±0.06 0±0 0±0 SIG32 0.02±0.04 0±0 0.02±0.02 0.04±0.06 Faecivivens 0.02±0.04 0.06±0.06 0±0 0±0 MGBC108787 0.02±0.11 0±0 0±0 0.06±0.19 Lachnoclostridium_B 0.02±0.06 0±0 0.05±0.11 0.01±0.01 TWA4 0.02±0.03 0.04±0.04 0.01±0.01 0.01±0.01 CAKOLD01 0.02±0.1 0±0 0.06±0.16 0±0 HGM12545 0.02±0.1 0±0 0.05±0.16 0.01±0.02 Firm-04 0.02±0.08 0.04±0.14 0.01±0.02 0.01±0.01 HGM13634 0.02±0.09 0±0 0.05±0.16 0.01±0.02 Marinobacter 0.02±0.08 0±0 0.04±0.13 0.02±0.03 KLE1615 0.02±0.05 0.05±0.08 0±0 0±0 MGBC113645 0.02±0.1 0±0 0.05±0.17 0±0 CAKSEI01 0.02±0.04 0±0 0.04±0.06 0.01±0.01 UMGS1994 0.02±0.05 0±0 0.04±0.09 0.01±0.01 Fusicatenibacter 0.02±0.05 0±0 0±0.01 0.05±0.07 Wohlfahrtiimonas 0.01±0.08 0±0 0.04±0.14 0±0 Onthousia 0.01±0.08 0±0 0.04±0.13 0±0 UMGS1754 0.01±0.06 0±0 0.03±0.1 0±0 Caccenecus 0.01±0.06 0±0 0.03±0.09 0.01±0.02 UBA1752 0.01±0.04 0±0 0.02±0.08 0±0.01 CAG-272 0.01±0.05 0±0 0.02±0.08 0±0 Pseudomonas 0.01±0.01 0±0.01 0±0 0.01±0.01 JABCPE02 0±0 0±0 0±0 0±0 Streptococcus 0±0 0±0 0±0 0±0 Alysiella 0±0 0±0 0±0 0±0 Neisseria 0±0 0±0 0±0 0±0 HGM08974 0±0 0±0 0±0 0±0 Pelistega 0±0 0±0 0±0 0±0 Moraxella 0±0 0±0 0±0 0±0 Actinobacillus 0±0 0±0 0±0 0±0 GN02-873 0±0 0±0 0±0 0±0 genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~diet)+ theme_minimal() + theme(axis.text.y = element_text(size=6))+ labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["alpha-diversity.html", "Chapter 6 Alpha diversity 6.1 Summary table 6.2 Wild vs Captive-bred (pre-grass) 6.3 Captive-bred: pre-grass vs post-grass", " Chapter 6 Alpha diversity load(&quot;data/data_host_filtered.Rdata&quot;) 6.1 Summary table # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # # Aggregate basal GIFT into elements genome_counts_filt &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts_raw),] genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_gifts &lt;- genome_gifts_raw[rownames(genome_gifts_raw) %in% genome_counts_filt$genome,] genome_gifts &lt;- genome_gifts[, colSums(genome_gifts != 0) &gt; 0] dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample))%&gt;% full_join(functional, by = join_by(sample == sample)) tinytable_1qi931yp29i15vi6ab7t .table td.tinytable_css_mhmr9at2jqdw1cdkowxz, .table th.tinytable_css_mhmr9at2jqdw1cdkowxz { border-bottom: solid 0.1em #d3d8dc; } alpha Wild Pre_grass Post_grass richness 795.67±26.45 836.83±16.57 835.67±14.03 neutral 70.62±37.82 112.37±28.26 101.87±41.5 phylogenetic 6.5±1.01 7.61±1.83 6.63±0.86 functional 1.45±0.04 1.53±0.05 1.51±0.03 6.2 Wild vs Captive-bred (pre-grass) 6.2.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!diet ==&quot;Post_grass&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.00896346 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!diet ==&quot;Post_grass&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.03469882 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!diet ==&quot;Post_grass&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.9219334 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!diet ==&quot;Post_grass&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(var.test_p_value_phylo = var.test(value ~ diet)$p.value) # A tibble: 1 × 1 var.test_p_value_phylo &lt;dbl&gt; 1 0.0600 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!diet ==&quot;Post_grass&quot;) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3997293 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(!diet ==&quot;Post_grass&quot;) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% summarize(var.test_p_functional = var.test(value ~ diet)$p.value) # A tibble: 1 × 1 var.test_p_functional &lt;dbl&gt; 1 0.859 6.2.2 Plots 6.3 Captive-bred: pre-grass vs post-grass 6.3.1 Plots 6.3.2 Mixed models Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(146764425) ( log ) Formula: richness ~ diet + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 219.9 224.6 -105.9 211.9 20 Scaled residuals: Min 1Q Median 3Q Max -1.5499 -0.1527 0.1297 0.3168 0.6689 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 4.059e-13 6.371e-07 Number of obs: 24, groups: individual, 12 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 6.729628 0.009843 683.7 &lt;2e-16 *** dietPost_grass -0.001400 0.013953 -0.1 0.92 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) ditPst_grss -0.701 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 232.4667 236.8308 -112.2333 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.001716918 35.50333 Fixed effects: neutral ~ diet Value Std.Error DF t-value p-value (Intercept) 112.36648 10.24893 11 10.96373 0.000 dietPost_grass -10.49914 14.49417 11 -0.72437 0.484 Correlation: (Intr) dietPost_grass -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.0371846 -0.2957926 0.1194249 0.4747379 2.1136583 Number of Observations: 24 Number of Groups: 12 Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 91.20606 95.57023 -41.60303 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.0001476027 1.432123 Fixed effects: phylogenetic ~ diet Value Std.Error DF t-value p-value (Intercept) 7.614920 0.4134183 11 18.41941 0.0000 dietPost_grass -0.986097 0.5846618 11 -1.68661 0.1198 Correlation: (Intr) dietPost_grass -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.35109679 -0.47719193 -0.03827828 0.57082503 1.94927769 Number of Observations: 24 Number of Groups: 12 Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik -69.49624 -65.13207 38.74812 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.631185e-06 0.03713605 Fixed effects: functional ~ diet Value Std.Error DF t-value p-value (Intercept) 1.5261340 0.01072026 11 142.3598 0.0000 dietPost_grass -0.0144785 0.01516073 11 -0.9550 0.3601 Correlation: (Intr) dietPost_grass -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.5122885 -0.6779157 0.1131752 0.4439028 3.1416800 Number of Observations: 24 Number of Groups: 12 "],["beta-diversity.html", "Chapter 7 Beta diversity 7.1 Captive-bred vs wild 7.2 Before and after grass", " Chapter 7 Beta diversity load(&quot;data/data.Rdata&quot;) load(&quot;data/beta.Rdata&quot;) load(&quot;data/data_host_filtered.Rdata&quot;) 7.1 Captive-bred vs wild load(&quot;data/beta_filtered_capwild.Rdata&quot;) wild_pre_samples &lt;- sample_metadata %&gt;% filter(diet!=&quot;Post_grass&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() genome_counts&lt;- genome_counts %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% select(all_of(wild_pre_samples))%&gt;% rownames_to_column(&quot;genome&quot;) sample_metadata &lt;- sample_metadata %&gt;% filter(diet!=&quot;Post_grass&quot;) beta_q0n &lt;- genome_counts %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) genome_counts &lt;- genome_counts %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts$genome) beta_q1p &lt;- genome_counts %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_counts_filt &lt;- genome_counts[genome_counts$genome %in% rownames(genome_gifts),] genome_counts_filt &lt;- genome_counts_filt %&gt;% remove_rownames() %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_gifts1 &lt;- genome_gifts[rownames(genome_gifts) %in% genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) beta_q1f &lt;- genome_counts_filt %&gt;% # remove_rownames() %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist) 7.1.1 Permanova analysis set.seed(1234) Richness sample_metadata_row&lt;- column_to_rownames(sample_metadata, &quot;sample&quot;) sample_metadata_row &lt;- sample_metadata_row[labels(beta_q0n$S), ] betadisper(beta_q0n$S, sample_metadata$diet) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.004224 0.0042240 7.8055 999 0.003 ** Residuals 22 0.011905 0.0005412 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Pre_grass Wild Pre_grass 0.008 Wild 0.010583 adonis2(beta_q0n$S ~ diet, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q0n$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() tinytable_y2dqa26z39giqc2kfisq .table td.tinytable_css_v8vo8fqlgka97lu94blk, .table th.tinytable_css_v8vo8fqlgka97lu94blk { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value diet 1 0.01526961 0.2489907 7.29391 0.001 Residual 22 0.04605641 0.7510093 NA NA Total 23 0.06132602 1.0000000 NA NA Neutral betadisper(beta_q1n$S, sample_metadata$diet) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.006925 0.0069254 0.5404 999 0.491 Residuals 22 0.281957 0.0128162 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Pre_grass Wild Pre_grass 0.476 Wild 0.47005 adonis2(beta_q1n$S ~ diet, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() tinytable_mlxrdgkl0941ux9o1nm6 .table td.tinytable_css_6djd35wdkwpbjl478x1x, .table th.tinytable_css_6djd35wdkwpbjl478x1x { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value diet 1 1.538238 0.2539205 7.487472 0.001 Residual 22 4.519715 0.7460795 NA NA Total 23 6.057953 1.0000000 NA NA Phylogenetic betadisper(beta_q1p$S, sample_metadata$diet) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.007671 0.0076708 1.8217 999 0.179 Residuals 22 0.092637 0.0042108 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Pre_grass Wild Pre_grass 0.187 Wild 0.19084 adonis2(beta_q1p$S ~ diet, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() tinytable_3f450bngrbc1njb7kdqe .table td.tinytable_css_n15051ycg5bbgfza9kg8, .table th.tinytable_css_n15051ycg5bbgfza9kg8 { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value diet 1 0.3720264 0.3082818 9.804858 0.001 Residual 22 0.8347476 0.6917182 NA NA Total 23 1.2067741 1.0000000 NA NA Functional betadisper(beta_q1f$S, sample_metadata$diet) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.003070 0.0030698 1.7361 999 0.171 Residuals 22 0.038901 0.0017682 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Pre_grass Wild Pre_grass 0.176 Wild 0.20119 adonis2(beta_q1f$S ~ diet, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() tinytable_glmf4taaiuawxafp2s1w .table td.tinytable_css_swohzcx8t1rc8wfkrnx2, .table th.tinytable_css_swohzcx8t1rc8wfkrnx2 { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value diet 1 0.01079711 0.187686 5.083124 0.103 Residual 22 0.04673041 0.812314 NA NA Total 23 0.05752752 1.000000 NA NA 7.1.2 Beta diversity plots 7.1.2.1 Richness beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(diet) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = diet)) + geom_point(size = 4) + scale_color_manual(values = diet_colors,labels=c(&quot;Pre_grass&quot; = &quot;Captive-bred no grass diet&quot;, &quot;Post_grass&quot; = &quot;Captive-bred grass diet&quot;, &quot;Wild&quot; = &quot;Wild&quot;))+ # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 12), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) +labs(color=&#39;Origin&#39;) 7.1.2.2 Neutral 7.1.2.3 Phylogenetic beta_q1p$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(diet) %&gt;% mutate(x_cen = median(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = median(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = diet)) + geom_point(size = 4) + scale_color_manual(values = diet_colors,labels=c(&quot;Pre_grass&quot; = &quot;Captive-bred no grass diet&quot;, &quot;Wild&quot; = &quot;Wild&quot;))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&#39;Origin&#39;) 7.1.2.4 Functional beta_q1f$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(diet) %&gt;% mutate(x_cen = median(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = median(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = diet)) + geom_point(size = 4) + scale_color_manual(values = diet_colors,labels=c(&quot;Pre_grass&quot; = &quot;Captive-bred no grass diet&quot;, &quot;Wild&quot; = &quot;Wild&quot;))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&#39;Origin&#39;) 7.2 Before and after grass load(&quot;data/beta_filtered_pre_post.Rdata&quot;) genome_counts &lt;- genome_counts_filt post_pre_samples &lt;- sample_metadata %&gt;% filter(diet!=&quot;Wild&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() genome_counts&lt;- genome_counts %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% select(all_of(post_pre_samples))%&gt;% rownames_to_column(&quot;genome&quot;) sample_metadata &lt;- sample_metadata %&gt;% filter(diet!=&quot;Wild&quot;) beta_q0n &lt;- genome_counts %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) genome_counts &lt;- genome_counts %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts$genome) beta_q1p &lt;- genome_counts %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_counts_filt &lt;- genome_counts[genome_counts$genome %in% rownames(genome_gifts),] genome_counts_filt &lt;- genome_counts_filt %&gt;% remove_rownames() %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_gifts1 &lt;- genome_gifts[rownames(genome_gifts) %in% genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) beta_q1f &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist) 7.2.1 Permanova analysis set.seed(1234) Richness sample_metadata_row&lt;- column_to_rownames(sample_metadata, &quot;sample&quot;) sample_metadata_row &lt;- sample_metadata_row[labels(beta_q0n$S), ] betadisper(beta_q0n$S, sample_metadata$diet) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.0000047 0.00000467 0.0151 999 0.888 Residuals 22 0.0067978 0.00030899 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Pre_grass Post_grass Pre_grass 0.885 Post_grass 0.90328 adonis2(beta_q0n$S ~ diet, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q0n$S))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q0n$S))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() tinytable_c3mx4ut1p76rbne0e35m .table td.tinytable_css_awy2e4e9ckosx7i3h37t, .table th.tinytable_css_awy2e4e9ckosx7i3h37t { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value diet 1 0.0006002558 0.030093 0.6825872 0.785 Residual 22 0.0193464336 0.969907 NA NA Total 23 0.0199466894 1.000000 NA NA Neutral betadisper(beta_q1n$S, sample_metadata$diet) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.001983 0.0019829 0.1447 999 0.686 Residuals 22 0.301550 0.0137068 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Pre_grass Post_grass Pre_grass 0.686 Post_grass 0.70733 adonis2(beta_q1n$S ~ diet, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$S))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1n$S))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() tinytable_i50ce727lll0g3ci24se .table td.tinytable_css_90391xcr9g9jjqyw1pwg, .table th.tinytable_css_90391xcr9g9jjqyw1pwg { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value diet 1 0.147998 0.03074149 0.6977632 0.946 Residual 22 4.666278 0.96925851 NA NA Total 23 4.814276 1.00000000 NA NA Phylogenetic betadisper(beta_q1p$S, sample_metadata$diet) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.001772 0.0017715 0.4816 999 0.468 Residuals 22 0.080927 0.0036785 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Pre_grass Post_grass Pre_grass 0.465 Post_grass 0.49497 adonis2(beta_q1p$S ~ diet, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$S))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$S))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() tinytable_nyz5wunkanzv2gsc42gv .table td.tinytable_css_xymc9qk58dosideuhqj2, .table th.tinytable_css_xymc9qk58dosideuhqj2 { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value diet 1 0.02764442 0.04145548 0.951464 0.59 Residual 22 0.63920164 0.95854452 NA NA Total 23 0.66684606 1.00000000 NA NA Functional betadisper(beta_q1f$S, sample_metadata$diet) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.008352 0.0083519 3.722 999 0.037 * Residuals 22 0.049367 0.0022439 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Pre_grass Post_grass Pre_grass 0.03 Post_grass 0.066699 adonis2(beta_q1f$S ~ diet, data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$S))), permutations = 999, strata = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$S))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() tinytable_t00z83wdzy7qwb6py298 .table td.tinytable_css_xqpq3lsj2vjlu4ywmupx, .table th.tinytable_css_xqpq3lsj2vjlu4ywmupx { border-bottom: solid 0.1em #d3d8dc; } term df SumOfSqs R2 statistic p.value diet 1 0.002870065 0.03722968 0.8507252 0.452 Residual 22 0.074220722 0.96277032 NA NA Total 23 0.077090787 1.00000000 NA NA 7.2.2 Beta diversity plots 7.2.2.1 Richness beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(diet) %&gt;% mutate(x_cen = median(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = median(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = diet)) + geom_point(size = 4) + scale_color_manual(values = diet_colors,labels=c(&quot;Pre_grass&quot; = &quot;Captive-bred no grass diet&quot;, &quot;Post_grass&quot; = &quot;Captive-bred grass diet&quot;))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&#39;Origin&#39;) 7.2.2.2 Neutral 7.2.2.3 Phylogenetic beta_q1p$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(diet) %&gt;% mutate(x_cen = median(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = median(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = diet)) + geom_point(size = 4) + scale_color_manual(values = diet_colors,labels=c(&quot;Pre_grass&quot; = &quot;Captive-bred no grass diet&quot;, &quot;Post_grass&quot; = &quot;Captive-bred grass diet&quot;))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&#39;Origin&#39;) 7.2.2.4 Functional beta_q1f$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(diet) %&gt;% mutate(x_cen = median(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = median(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = diet)) + geom_point(size = 4) + scale_color_manual(values = diet_colors,labels=c(&quot;Pre_grass&quot; = &quot;Captive-bred no grass diet&quot;, &quot;Post_grass&quot; = &quot;Captive-bred grass diet&quot;))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 20, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 18), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 16), legend.title = element_text(size = 18), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&#39;Origin&#39;) "],["differential-abundance-analysis.html", "Chapter 8 Differential abundance analysis 8.1 Captive vs Wild 8.2 Captive: before and after grass", " Chapter 8 Differential abundance analysis 8.1 Captive vs Wild 8.1.1 Structural zeros # A tibble: 10 × 13 # Rowwise: genome present average domain phylum class order family genus species completeness contamination length &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 EHA03329_bin.40 pre 12.3 d__Bacteria p__Pseudom… c__A… o__R… f__CA… g__ s__ 100 0.19 1.40e6 2 EHA03293_bin.11 pre 2.25 d__Bacteria p__Pseudom… c__G… o__C… f__Wo… g__I… s__ 94.5 0.68 2.30e6 3 EHA03293_bin.24 pre 1.66 d__Bacteria p__Pseudom… c__G… o__B… f__Bu… g__P… s__Pae… 100. 0.04 2.02e6 4 EHA03333_bin.4 pre 1.42 d__Bacteria p__Pseudom… c__G… o__B… f__Bu… g__O… s__ 94.4 1.56 2.05e6 5 EHA03306_bin.54 pre 1.27 d__Archaea p__Methano… c__M… o__M… f__Me… g__M… s__Met… 99.8 0.07 1.71e6 6 EHA03333_bin.7 pre 0.841 d__Bacteria p__Pseudom… c__G… o__C… f__Wo… g__I… s__ 62.0 1.36 1.93e6 7 EHA03294_bin.17 pre 0.755 d__Bacteria p__Bacillo… c__C… o__C… f__UB… g__C… s__ 88.3 1.19 8.66e5 8 EHA03333_bin.59 pre 0.627 d__Bacteria p__Pseudom… c__G… o__C… f__Wo… g__W… s__ 62.6 1.11 1.36e6 9 EHA04588_bin.94 wild 0.0000193 d__Bacteria p__Pseudom… c__G… o__C… f__Ca… g__ s__ 75.4 0.62 1.95e6 10 EHA04588_bin.140 &lt;NA&gt; NA d__Bacteria p__Patesci… c__J… o__B… f__UB… g__G… s__ 92.4 0.18 9.00e5 8.1.2 Enrichment analysis: Ancombc2 8.1.2.1 MAG level 8.1.2.2 Genus level 8.1.2.3 Phylum level taxon lfc_dietWild p_dietWild 1 p__Spirochaetota 8.7284796 4.776516e-07 2 p__Bacillota_B 2.7666740 7.923227e-07 3 p__Synergistota 3.3563476 8.143247e-06 4 p__Bacillota_C 3.0796571 3.586172e-05 5 p__Desulfobacterota 2.3245267 5.530492e-05 6 p__Verrucomicrobiota 2.1635054 5.026095e-03 7 p__Bacteroidota 1.1976032 1.149023e-02 8 p__Bacillota_A 0.9179763 2.146291e-02 8.1.2.4 Relative abundances of Spirochaetota 8.2 Captive: before and after grass 8.2.1 Structural zeros 8.2.2 Enrichment analysis: Ancombc2 8.2.2.1 MAG level "],["functional-differences.html", "Chapter 9 Functional differences 9.1 MCI 9.2 Community level plots 9.3 ANCOM-BC2", " Chapter 9 Functional differences 9.1 MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% # filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(diet) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 diet MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Post_grass 0.240 0.0130 2 Pre_grass 0.249 0.0152 3 Wild 0.254 0.0206 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% filter(diet!=&quot;Post_grass&quot;) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.97017, p-value = 0.6712 res.aov&lt;-aov(value ~ diet, data=MCI) summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) diet 1 0.000140 0.0001402 0.427 0.52 Residuals 22 0.007219 0.0003281 9.2 Community level plots 9.3 ANCOM-BC2 9.3.1 Captive vs Wild 9.3.1.1 Element level 9.3.1.2 Functional level 9.3.2 Before and after grass 9.3.2.1 Element level 9.3.2.2 Functional level taxon lfc_dietPre_grass p_dietPre_grass Domain Function 1 S03 -0.1948368 0.01689626 Structure Spore "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
